// Este schema solo es necesario para usar dentro de la web
// https://esper-epl-tryout.appspot.com/epltryout/mainform.html
// compact.py lo eliminará.
create schema iotEvent(type string, capacity double, occupancy double, numberOfIncoming double, numberOfOutgoing double);

expression getOccupancy alias for {(
    (case when occupancy? is null or occupancy? = '[?]' then 0 else cast(cast(occupancy?, string), double) end)
    + cast(cast(numberOfIncoming?, string), double)
    - cast(cast(numberOfOutgoing?, string), double)
)}
expression getBoundedOccupancy alias for {(
    case when getOccupancy < 0 then 0 else getOccupancy end
)}
// el '*' es necesario porque si no, el CEP pierde el EntityID y EntityType
// de la entidad que se está escribiendo, y la acción 'update' falla.
select "calcula_ocupacion" as ruleName, *,
    current_timestamp().format("yyyy-MM-dd'T'HH:mm:ss.SSSX") as timeinstant,
    getBoundedOccupancy as updatedOccupancy,
    getBoundedOccupancy / cast(cast(capacity?, string), double) as percentage
from iotEvent
where (type ?= 'Access' or type ?= 'Zone') and
    capacity? is not null and
    cast(cast(capacity? ,string), double) > 0 and
    numberOfIncoming? is not null and
    cast(cast(numberOfIncoming?, string), double) >= 0 and
    numberOfOutgoing? is not null and
    cast(cast(numberOfOutgoing?, string), double) >= 0
